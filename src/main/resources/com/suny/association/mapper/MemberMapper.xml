<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.suny.association.mapper.MemberMapper">
    <resultMap id="BaseResultMap" type="com.suny.association.pojo.po.Member">
        <id property="memberId" column="member_id"/>
        <result property="memberName" column="member_name"/>
        <result property="memberClassName" column="member_class_name"/>
        <result property="memberSex" column="member_sex"/>
        <result property="memberGradeNumber" column="member_grade_number"/>
        <result property="memberStatus" column="member_status"/>
        <!--部门复杂类型关联-->
        <association property="memberDepartment" column="member_department_id"
                     javaType="com.suny.association.pojo.po.Department"
                     select="getDepartment"/>
        <!--成员角色复杂类型关联-->
        <association property="memberRoles" column="member_role_id"
                     javaType="com.suny.association.pojo.po.MemberRoles"
                     select="getMemberRole"/>
        <!--//这里有问题-->
        <!--协会成员对应的管理员复杂类型集合-->
        <association property="memberManager" column="member_manager_id"
                     javaType="com.suny.association.pojo.po.Member"
                     select="getMemberManage"/>
    </resultMap>

    <!--成员管理员-->
    <resultMap id="memberManagerResult" type="com.suny.association.pojo.po.Member">
        <id property="memberId" column="member_id"/>
        <result property="memberName" column="member_name"/>
        <result property="memberClassName" column="member_class_name"/>
        <result property="memberSex" column="member_sex"/>
        <result property="memberGradeNumber" column="member_grade_number"/>
        <result property="memberStatus" column="member_status"/>
        <!--部门复杂类型关联-->
        <association property="memberDepartment" column="member_department_id"
                     javaType="com.suny.association.pojo.po.Department"
                     select="getDepartment"/>
        <!--成员角色复杂类型关联-->
        <association property="memberRoles" column="member_role_id" javaType="com.suny.association.pojo.po.MemberRoles"
                     select="getMemberRole"/>

        <!--协会成员对应的管理员复杂类型集合-->
        <association property="memberManager" column="member_manager_id" javaType="com.suny.association.pojo.po.Member"
                     select="getMemberManage"/>
    </resultMap>

    <!--成员角色-->
    <resultMap id="memberRolesResult" type="com.suny.association.pojo.po.MemberRoles">
        <id property="memberRoleId" column="member_role_id"/>
        <result property="memberRoleName" column="member_role_name"/>
    </resultMap>

    <!--部门-->
    <resultMap id="memberDepartmentResult" type="com.suny.association.pojo.po.Department">
        <id column="department_id" property="departmentId"/>
        <result column="department_name" property="departmentName"/>
    </resultMap>

    <!--查询管理员信息-->
    <select id="getMemberManage" resultMap="memberManagerResult">
        SELECT
            member_id,
            member_name,
            member_class_name,
            member_sex,
            member_grade_number,
            member_manager_id,
            member_department_id,
            member_status,
            member_role_id
        FROM member
        WHERE member_manager_id = #{ memberManager }
    </select>

    <!--查询部门-->
    <select id="getDepartment" parameterType="int" resultMap="memberDepartmentResult">
        SELECT
            department_id,
            department_name
        FROM department
        WHERE department_id = #{memberDepartment}
    </select>

    <!--获得成员角色-->
    <select id="getMemberRole" parameterType="int" resultMap="memberRolesResult">
        SELECT
            member_role_id,
            member_role_name
        FROM member_roles
        WHERE member_role_id = #{memberRoles}
    </select>


    <insert id="insertAndGetId" parameterType="com.suny.association.pojo.po.Member" useGeneratedKeys="true"
            keyProperty="memberId">
        INSERT INTO member
        <trim prefix="set" suffixOverrides=",">
            <if test="memberId != null">
                member_id = #{memberId,jdbcType=BIGINT} ,
            </if>
            <if test="memberName != null">
                member_name =#{memberName,jdbcType=VARCHAR},
            </if>
            <if test="memberClassName != null">
                member_class_name =#{memberClassName,jdbcType=VARCHAR},
            </if>
            <if test="memberSex != null">
                member_sex =#{memberSex,jdbcType=BOOLEAN},
            </if>
            <if test="memberGradeNumber != null">
                member_grade_number =#{memberGradeNumber,jdbcType=INTEGER},
            </if>
            <if test="memberManager != null">
                member_manager_id =#{memberManager,jdbcType=BIGINT},
            </if>
            <if test="memberDepartment != null">
                member_department_id =#{memberDepartment.departmentId,jdbcType=INTEGER},
            </if>
            <if test="memberStatus != null">
                member_status =#{memberStatus,jdbcType=BOOLEAN},
            </if>
            <if test="memberRoles != null">
                member_role_id =#{memberRoles.memberRoleId,jdbcType=INTEGER}
            </if>
        </trim>


    </insert>

    <insert id="insert" parameterType="com.suny.association.pojo.po.Member" useGeneratedKeys="true"
            keyProperty="memberId">
        INSERT INTO member
        <trim prefix="set" suffixOverrides=",">
            <if test="memberId != null">
                member_id = #{memberId,jdbcType=BIGINT} ,
            </if>
            <if test="memberName != null">
                member_name =#{memberName,jdbcType=VARCHAR},
            </if>
            <if test="memberClassName != null">
                member_class_name =#{memberClassName,jdbcType=VARCHAR},
            </if>
            <if test="memberSex != null">
                member_sex =#{memberSex,jdbcType=BOOLEAN},
            </if>
            <if test="memberGradeNumber != null">
                member_grade_number =#{memberGradeNumber,jdbcType=INTEGER},
            </if>
            <if test="memberManager != null">
                member_manager_id =#{memberManager,jdbcType=BIGINT},
            </if>
            <if test="memberDepartment != null">
                member_department_id =#{memberDepartment.departmentId,jdbcType=INTEGER},
            </if>
            <if test="memberStatus != null">
                member_status =#{memberStatus,jdbcType=BOOLEAN},
            </if>
            <if test="memberRoles != null">
                member_role_id =#{memberRoles.memberRoleId,jdbcType=INTEGER}
            </if>
        </trim>
    </insert>

    <delete id="deleteById" parameterType="Integer">
        DELETE FROM member
        WHERE member_id = #{id}
    </delete>

    <delete id="deleteByLongId" parameterType="Long">
        DELETE FROM member
        WHERE member_id = #{id}
    </delete>

    <update id="update" parameterType="com.suny.association.pojo.po.Member">
        UPDATE member
        <trim prefix="set" suffixOverrides=",">
            <if test="memberId != null">
                member_id = #{memberId,jdbcType=BIGINT} ,
            </if>
            <if test="memberName != null">
                member_name =#{memberName,jdbcType=VARCHAR},
            </if>
            <if test="memberClassName != null">
                member_class_name =#{memberClassName,jdbcType=VARCHAR},
            </if>
            <if test="memberSex != null">
                member_sex =#{memberSex,jdbcType=BOOLEAN},
            </if>
            <if test="memberGradeNumber != null">
                member_grade_number =#{memberGradeNumber,jdbcType=INTEGER},
            </if>
            <if test="memberManager != null">
                member_manager_id =#{memberManager,jdbcType=BIGINT},
            </if>
            <if test="memberDepartment != null">
                member_department_id =#{memberDepartment.departmentId,jdbcType=INTEGER},
            </if>
            <if test="memberStatus != null">
                member_status =#{memberStatus,jdbcType=BOOLEAN},
            </if>
            <if test="memberRoles != null">
                member_role_id =#{memberRoles.memberRoleId,jdbcType=INTEGER}
            </if>
        </trim>
        where member_id=#{memberId}

    </update>


    <select id="queryFreezeManager" resultMap="BaseResultMap">
        SELECT
            member_id,
            member_name,
            member_class_name,
            member_sex,
            member_grade_number,
            member_manager_id,
            member_department_id,
            member_status,
            member_role_id
        FROM member
        WHERE member_role_id > 3
              AND
              member_status = 0
    </select>
    <select id="queryNormalManager" resultMap="BaseResultMap">
        SELECT
            member_id,
            member_name,
            member_class_name,
            member_sex,
            member_grade_number,
            member_manager_id,
            member_department_id,
            member_status,
            member_role_id
        FROM member
        WHERE member_role_id > 2
              AND
              member_status = 1
    </select>

    <select id="queryFreezeMember" resultMap="BaseResultMap">
        SELECT
            member_id,
            member_name,
            member_class_name,
            member_sex,
            member_grade_number,
            member_manager_id,
            member_department_id,
            member_status,
            member_role_id
        FROM member
        WHERE member_status = 0
    </select>

    <select id="queryNormalMember" resultMap="BaseResultMap">
        SELECT
            member_id,
            member_name,
            member_class_name,
            member_sex,
            member_grade_number,
            member_manager_id,
            member_department_id,
            member_status,
            member_role_id
        FROM member
        WHERE member_status = 1
    </select>

    <select id="queryById" parameterType="Integer" resultMap="BaseResultMap">
        SELECT
            member_id,
            member_name,
            member_class_name,
            member_sex,
            member_grade_number,
            member_manager_id,
            member_department_id,
            member_status,
            member_role_id
        FROM member
        WHERE member_id = #{id}
    </select>

    <select id="queryByLongId" parameterType="Long" resultMap="BaseResultMap">
        SELECT
            member_id,
            member_name,
            member_class_name,
            member_sex,
            member_grade_number,
            member_manager_id,
            member_department_id,
            member_status,
            member_role_id
        FROM member
        WHERE member_id = #{id}
    </select>

    <select id="selectAllByConditions" resultMap="BaseResultMap">
        SELECT
        member_id,
        member_name,
        member_class_name,
        member_sex,
        member_grade_number,
        member_manager_id,
        member_department_id,
        member_status,
        member_role_id
        FROM member
        WHERE member_department_id =
        ( SELECT department_id
        FROM department
        <if test="#{departmentname}!=null || #{ departmentname}==''">
            WHERE department_name LIKE '%#{departmentname}%') AND
        </if>
        member_status =1
        LIMIT
        #{offset},#{limit}


    </select>
    <select id="queryAll" resultMap="BaseResultMap">
        SELECT
            member_id,
            member_name,
            member_class_name,
            member_sex,
            member_grade_number,
            member_manager_id,
            member_department_id,
            member_status,
            member_role_id
        FROM member
    </select>

    <select id="list" parameterType="hashmap" resultMap="BaseResultMap">
        SELECT
        m.member_id,
        m.member_name,
        m.member_class_name,
        m.member_sex,
        m.member_grade_number,
        m.member_manager_id,
        m.member_department_id,
        m.member_status,
        m.member_role_id
        FROM member as m
        <where>
            1=1
            <if test="departmentname!=null">
                AND m.member_department_id = ( SELECT d.department_id FROM department as d WHERE
                department_name like '%' #{departmentname,jdbcType=VARCHAR} '%')
            </if>
            <if test="status !=null">
                AND m.member_status =#{status}
            </if>
        </where>
        LIMIT #{offset},#{limit}
    </select>

    <select id="queryCount" resultType="int">
        SELECT count(*)
        FROM member;
    </select>

    <select id="quoteByMemberRoleId" parameterType="int" resultType="com.suny.association.pojo.po.Member">
        SELECT
            m.member_id,
            m.member_id
        FROM member AS m
        WHERE m.member_role_id = #{memberRoleId}
    </select>

    <select id="queryByName" resultMap="BaseResultMap" parameterType="string">
        SELECT
            m.member_id,
            m.member_name,
            m.member_class_name,
            m.member_sex,
            m.member_grade_number,
            m.member_manager_id,
            m.member_department_id,
            m.member_status,
            m.member_role_id
        FROM member AS m
        WHERE m.member_name = #{name}
    </select>
    <select id="queryLimitMemberRole" resultMap="BaseResultMap">
        SELECT
            m.member_id,
            m.member_role_id,
            m.member_grade_number
        FROM member AS m
        WHERE m.member_role_id <![CDATA[
        <=
        ]]> #{memberRoleId} AND m.member_grade_number = #{memberGrade}
    </select>


</mapper>