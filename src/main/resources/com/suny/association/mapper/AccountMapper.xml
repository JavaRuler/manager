<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.suny.association.mapper.AccountMapper">
    <resultMap id="BaseResultMap" type="com.suny.association.pojo.po.Account">
        <id property="accountId" column="account_id"/>
        <result property="accountName" column="account_name"/>
        <result property="accountPassword" column="account_password"/>
        <result property="accountPhone" column="account_phone"/>
        <result property="accountEmail" column="account_email"/>
        <result property="accountStatus" column="account_status"/>
        <!--账号角色复杂类型关联-->
        <association property="accountRoles" column="account_role_id"
                     javaType="com.suny.association.pojo.po.Roles">
            <id property="roleId" column="role_id"/>
            <result property="description" column="role_name"/>
            <result property="createTime" column="role_create_time"/>
        </association>
        <!--复杂类型的集-->
        <association property="accountMember" column="account_member_id" javaType="com.suny.association.pojo.po.Member">
            <id property="memberId" column="member_id"/>
            <result property="memberName" column="member_name"/>
            <result property="memberClassName" column="member_class_name"/>
            <result property="memberSex" column="member_sex"/>
            <result property="memberGradeNumber" column="member_grade_number"/>
            <result property="memberStatus" column="member_status"/>
        </association>
    </resultMap>

    <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT
            a.account_id,
            a.account_name,
            a.account_status,
            a.account_member_id,
            a.account_role_id,
            r.role_id          AS role_id,
            r.role_description AS role_name,
            m.member_id        AS member_id,
            m.member_name      AS member_name
        FROM account a
            JOIN roles r
                ON a.account_role_id = r.role_id
            JOIN member m ON a.account_member_id = m.member_id
        WHERE a.account_id = #{accountId};
    </select>

    <!--=============================================================================================-->

    <sql id="BaseSelectFields">
        account_id, account_name, account_password, account_phone, account_email, account_status, account_role_id, account_member_id
    </sql>


    <insert id="insert" parameterType="com.suny.association.pojo.po.Account">
        INSERT INTO account
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="accountId != null">account_id ,</if>
            <if test="accountName != null">account_name ,</if>
            <if test="accountPassword != null">account_password ,</if>
            <if test="accountPhone != null">account_phone ,</if>
            <if test="accountEmail != null">account_email,</if>
            <if test="accountStatus != null">account_status,</if>
            <if test="accountMember != null">account_member_id,</if>
            <if test="accountRoles != null">account_role_id,</if>
        </trim>
        <trim prefix="values(" suffix=")" suffixOverrides=",">
            <if test="accountId != null">#{accountId,jdbcType=BIGINT},</if>
            <if test="accountName != null">#{accountName,jdbcType=VARCHAR},</if>
            <if test="accountPassword != null">#{accountPassword,jdbcType=VARCHAR},</if>
            <if test="accountPhone != null">#{accountPhone,jdbcType=BIGINT},</if>
            <if test="accountEmail != null">#{accountEmail,jdbcType=VARCHAR},</if>
            <if test="accountStatus != null">#{accountStatus,jdbcType=BOOLEAN},</if>
            <if test="accountMember != null">#{accountMember.memberId,jdbcType=BIGINT},</if>
            <if test="accountRoles != null">#{accountRoles.roleId,jdbcType=INTEGER},</if>
        </trim>
    </insert>

    <insert id="insertAndReturnId" parameterType="com.suny.association.pojo.po.Account" useGeneratedKeys="true"
            keyProperty="accountId">
        INSERT INTO account
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="accountId != null">account_id ,</if>
            <if test="accountName != null">account_name ,</if>
            <if test="accountPassword != null">account_password ,</if>
            <if test="accountPhone != null">account_phone ,</if>
            <if test="accountEmail != null">account_email,</if>
            <if test="accountStatus != null">account_status,</if>
            <if test="accountMember != null">account_member_id,</if>
            <if test="accountRoles != null">account_role_id,</if>
        </trim>
        <trim prefix="values(" suffix=")" suffixOverrides=",">
            <if test="accountId != null">#{accountId,jdbcType=BIGINT},</if>
            <if test="accountName != null">#{accountName,jdbcType=VARCHAR},</if>
            <if test="accountPassword != null">#{accountPassword,jdbcType=VARCHAR},</if>
            <if test="accountPhone != null">#{accountPhone,jdbcType=BIGINT},</if>
            <if test="accountEmail != null">#{accountEmail,jdbcType=VARCHAR},</if>
            <if test="accountStatus != null">#{accountStatus,jdbcType=BOOLEAN},</if>
            <if test="accountMember != null">#{accountMember.memberId,jdbcType=BIGINT},</if>
            <if test="accountRoles != null">#{accountRoles.roleId,jdbcType=INTEGER},</if>
        </trim>
    </insert>

    <update id="update" parameterType="com.suny.association.pojo.po.Account">
        UPDATE account
        <trim prefix="set" suffixOverrides=",">
            <if test="accountName != null">account_name =#{accountName,jdbcType=VARCHAR},</if>
            <if test="accountPassword != null">account_password=#{accountPassword,jdbcType=VARCHAR},</if>
            <if test="accountPhone != null">account_phone =#{accountPhone,jdbcType=BIGINT},</if>
            <if test="accountEmail != null">account_email =#{accountEmail,jdbcType=VARCHAR},</if>
            <if test="accountStatus != null">account_status =#{accountStatus,jdbcType=BOOLEAN},</if>
            <if test="accountMember != null">account_member_id =#{accountMember.memberId,jdbcType=BIGINT},</if>
            <if test="accountRoles != null">account_role_id =#{accountRoles.roleId,jdbcType=INTEGER},</if>
        </trim>
        WHERE a.account_id = #{accountId,jdbcType=BIGINT}
    </update>

    <update id="changePassword">
        UPDATE account
        SET account_password = #{newPassword}
        WHERE account_id = #{accountId}
    </update>

    <select id="queryByMemberId" parameterType="int" resultMap="BaseResultMap">
        SELECT
        <include refid="BaseSelectFields"/>
        FROM account
        WHERE account_member_id = #{memberId}
    </select>

    <select id="queryQuoteByAccountId" parameterType="Long" resultMap="BaseResultMap">
        SELECT
            a.account_id,
            a.account_member_id
        FROM account AS a
        WHERE a.account_id = #{accountId,jdbcType=BIGINT}
    </select>

    <select id="queryQuoteByMemberId" parameterType="Long" resultMap="BaseResultMap">
        SELECT
            a.account_id,
            a.account_member_id
        FROM account AS a
        WHERE a.account_member_id = #{memberId}
    </select>


    <select id="selectByName" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT
            a.account_id,
            a.account_name,
            a.account_password,
            a.account_status,
            a.account_member_id,
            a.account_role_id,
            r.role_id          AS role_id,
            r.role_description AS role_name,
            m.member_id        AS member_id,
            m.member_name      AS member_name
        FROM account a
            JOIN roles r
                ON a.account_role_id = r.role_id
            JOIN member m ON a.account_member_id = m.member_id
        WHERE a.account_name = #{name};
    </select>


    <delete id="deleteById" parameterType="java.lang.Integer">
        DELETE FROM account
        WHERE account_id = #{accountId,jdbcType=BIGINT}
    </delete>


    <!--<select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT
        <include refid="BaseSelectFields"/>
        FROM account
        WHERE account_id = #{accountId,jdbcType=BIGINT}
    </select>-->


    <select id="queryByPhone" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT
            a.account_id,
            a.account_phone
        FROM account AS a
        WHERE a.account_phone = #{phoneNumber}
    </select>

    <select id="queryByMail" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT
            a.account_id,
            a.account_email
        FROM account AS a
        WHERE a.account_email = #{email}
    </select>


    <select id="selectAll" resultMap="BaseResultMap">
        SELECT
        <include refid="BaseSelectFields"/>
        FROM account
    </select>
    <select id="selectByParam" parameterType="hashmap" resultMap="BaseResultMap">
        SELECT
        <include refid="BaseSelectFields"/>
        FROM account
        <where>
            1=1
            <if test="status != null">
                and account_status =#{status}
            </if>
        </where>
        LIMIT #{offset},#{limit}
    </select>

    <select id="selectCount" resultType="int">
        SELECT count(*)
        FROM account;
    </select>

</mapper>






